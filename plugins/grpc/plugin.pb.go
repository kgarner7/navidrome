// Code generated by protoc-gen-go-plugin. DO NOT EDIT.
// versions:
// 	protoc-gen-go-plugin 0.8.0
// 	protoc               v5.28.2
// source: plugin.proto

package grpc

import (
	context "context"

	emptypb "github.com/knqyf263/go-plugin/types/known/emptypb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorType int32

const (
	ErrorType_BadAccess      ErrorType = 0
	ErrorType_Other          ErrorType = 1
	ErrorType_NotImplemented ErrorType = 2
)

// Enum value maps for ErrorType.
var (
	ErrorType_name = map[int32]string{
		0: "BadAccess",
		1: "Other",
		2: "NotImplemented",
	}
	ErrorType_value = map[string]int32{
		"BadAccess":      0,
		"Other":          1,
		"NotImplemented": 2,
	}
)

func (x ErrorType) Enum() *ErrorType {
	p := new(ErrorType)
	*p = x
	return p
}

type LogLevel int32

const (
	LogLevel_Unknown LogLevel = 0
	LogLevel_Error   LogLevel = 2
	LogLevel_Warn    LogLevel = 3
	LogLevel_Info    LogLevel = 4
	LogLevel_Debug   LogLevel = 5
	LogLevel_Trace   LogLevel = 6
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "Unknown",
		2: "Error",
		3: "Warn",
		4: "Info",
		5: "Debug",
		6: "Trace",
	}
	LogLevel_value = map[string]int32{
		"Unknown": 0,
		"Error":   2,
		"Warn":    3,
		"Info":    4,
		"Debug":   5,
		"Trace":   6,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

type HttpMethod int32

const (
	HttpMethod_GET     HttpMethod = 0
	HttpMethod_HEAD    HttpMethod = 1
	HttpMethod_POST    HttpMethod = 2
	HttpMethod_PUT     HttpMethod = 3
	HttpMethod_PATCH   HttpMethod = 4
	HttpMethod_DELETE  HttpMethod = 5
	HttpMethod_CONNECT HttpMethod = 6
	HttpMethod_OPTIONS HttpMethod = 7
	HttpMethod_TRACE   HttpMethod = 8
)

// Enum value maps for HttpMethod.
var (
	HttpMethod_name = map[int32]string{
		0: "GET",
		1: "HEAD",
		2: "POST",
		3: "PUT",
		4: "PATCH",
		5: "DELETE",
		6: "CONNECT",
		7: "OPTIONS",
		8: "TRACE",
	}
	HttpMethod_value = map[string]int32{
		"GET":     0,
		"HEAD":    1,
		"POST":    2,
		"PUT":     3,
		"PATCH":   4,
		"DELETE":  5,
		"CONNECT": 6,
		"OPTIONS": 7,
		"TRACE":   8,
	}
)

func (x HttpMethod) Enum() *HttpMethod {
	p := new(HttpMethod)
	*p = x
	return p
}

type RpcError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string    `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Type    ErrorType `protobuf:"varint,2,opt,name=type,proto3,enum=grpc.ErrorType" json:"type,omitempty"`
}

func (x *RpcError) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *RpcError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RpcError) GetType() ErrorType {
	if x != nil {
		return x.Type
	}
	return ErrorType_BadAccess
}

// The request message containing the user's name.
type GreetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GreetRequest) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *GreetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The reply message containing the greetings
type GreetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GreetReply) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *GreetReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config map[string]string `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *ConfigRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type LogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log   string   `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Level LogLevel `protobuf:"varint,2,opt,name=level,proto3,enum=grpc.LogLevel" json:"level,omitempty"`
}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *LogRequest) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *LogRequest) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_Unknown
}

type HttpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string     `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Method HttpMethod `protobuf:"varint,2,opt,name=method,proto3,enum=grpc.HttpMethod" json:"method,omitempty"`
	Body   *string    `protobuf:"bytes,3,opt,name=body,proto3,oneof" json:"body,omitempty"`
}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *HttpRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpRequest) GetMethod() HttpMethod {
	if x != nil {
		return x.Method
	}
	return HttpMethod_GET
}

func (x *HttpRequest) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

type HttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []byte `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Code     int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *HttpResponse) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *HttpResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type RpcHttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *HttpResponse `protobuf:"bytes,1,opt,name=response,proto3,oneof" json:"response,omitempty"`
	Error    *RpcError     `protobuf:"bytes,10,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *RpcHttpResponse) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *RpcHttpResponse) GetResponse() *HttpResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RpcHttpResponse) GetError() *RpcError {
	if x != nil {
		return x.Error
	}
	return nil
}

// The greeting service definition.
// go:plugin type=plugin version=1
type Greeter interface {
	// Sends a greeting
	SayHello(context.Context, *GreetRequest) (*GreetReply, error)
	// initializes the plugin
	Configure(context.Context, *ConfigRequest) (*emptypb.Empty, error)
}

// go:plugin type=host version=1
type HostFunctions interface {
	// allows the plugin to make an http request
	Request(context.Context, *HttpRequest) (*RpcHttpResponse, error)
	DoLog(context.Context, *LogRequest) (*emptypb.Empty, error)
}
